name: Ansible Lint CI

on:
  pull_request:
    branches: ["main", "stable", "release/v*"]
  push:
    branches: ["main", "stable", "release/v*"]

jobs:
  build:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Ansible Lint
        id: lint
        uses: ansible/ansible-lint-action@v24.9.2
        with:
          args: "--format json playbooks/*.yml roles/docker_services/**/*.yml"
        continue-on-error: true
      
      - name: Process Ansible Lint Output
        if: steps.lint.outcome == 'failure'
        run: |
          python - <<EOF
          import json
          from pathlib import Path

          # Load JSON data from the output of ansible-lint
          data = json.loads(Path('ansible-lint-output.json').read_text())

          # Create Markdown table
          table = "| Line # | File Path | Error Type | Description |\n|--------|-----------|------------|-------------|\n"
          for error in data:
              line = error.get("line", "N/A")
              error_type = error.get("type", "N/A")
              description = error.get("message", "N/A")
              file_path = error.get("path", "N/A")
              table += f"| {line} | {file_path} | {error_type} | {description} |\n"

          # Create Markdown checklist
          checklist = ""
          for error in data:
              line = error.get("line", "N/A")
              error_type = error.get("type", "N/A")
              description = error.get("message", "N/A")
              file_path = error.get("path", "N/A")
              checklist += f"- [ ] **{error_type}**: {description} (File: {file_path}, Line: {line})\n"

          # Combine table and checklist with headings and <details> tags
          markdown = """
### Linting Report

<details>
<summary>ðŸ“‹ Table View</summary>

{table}

</details>

<details>
<summary>âœ… Actionable Checklist</summary>

{checklist}

</details>
""".format(table=table, checklist=checklist)

          # Save the markdown output
          Path("ansible-lint-report.md").write_text(markdown)
          EOF

      - name: Create GitHub Issue for Linting Errors
        if: steps.lint.outcome == 'failure'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          issue_title="Ansible Linting Errors Report - Run #${{ github.run_number }} - $(date "+%Y-%m-%d %H:%M:%S")"
          issue_body=$(cat ansible-lint-report.md)

          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"title\": \"$issue_title\", \"body\": \"$issue_body\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues